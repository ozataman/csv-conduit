Name:                csv-conduit
Version:             0.7.3.0
Synopsis:            A flexible, fast, conduit-based CSV parser library for Haskell.
Homepage:            http://github.com/ozataman/csv-conduit
License:             BSD3
License-file:        LICENSE
Author:              Ozgun Ataman
Maintainer:          Ozgun Ataman <ozataman@gmail.com>
Category:            Data, Conduit, CSV, Text
Build-type:          Simple
Cabal-version:       >= 1.10
Tested-with:         GHC == 9.2.3, GHC == 9.0.1, GHC == 8.10.4, GHC == 8.8.4, GHC == 8.8.3, GHC == 8.6.5, GHC == 8.4.4
Description:
  CSV files are the de-facto standard in many situations involving data transfer,
  particularly when dealing with enterprise application or disparate database
  systems.

  .

  While there are a number of CSV libraries in Haskell, at the time of this
  project's start in 2010, there wasn't one that provided all of the following:

  .

  * Full flexibility in quote characters, separators, input/output
  .
  * Constant space operation
  .
  * Robust parsing, correctness and error resiliency
  .
  * Convenient interface that supports a variety of use cases
  .
  * Fast operation
  .

  This library is an attempt to close these gaps. Please note that
  this library started its life based on the enumerator package and
  has recently been ported to work with conduits instead. In the
  process, it has been greatly simplified thanks to the modular nature
  of the conduits library.

  .

  Following the port to conduits, the library has also gained the
  ability to parameterize on the stream type and work both with
  ByteString and Text.

  .

  For more documentation and examples, check out the README at:
  .

  <http://github.com/ozataman/csv-conduit>
  .


extra-source-files:
  README.md
  changelog.md
  test/test.csv
  test/Test.hs

flag lib-Werror
  default: False
  manual: True

library
  default-language: Haskell2010
  exposed-modules:
      Data.CSV.Conduit
      Data.CSV.Conduit.Types
      Data.CSV.Conduit.Conversion
      Data.CSV.Conduit.Parser.ByteString
      Data.CSV.Conduit.Parser.Text
  other-modules:
      Data.CSV.Conduit.Conversion.Internal
  ghc-options: -Wall -funbox-strict-fields -Wunused-packages
  if flag(lib-Werror)
    ghc-options: -Werror
  hs-source-dirs: src
  build-depends:
      attoparsec             >= 0.10
    , base                   >= 4.11.1 && < 5
    , bytestring
    , conduit                >= 1.2.8
    , conduit-extra
    , containers             >= 0.3
    , exceptions             >= 0.3
    , text
    , data-default
    , vector
    , array
    , blaze-builder
    , ordered-containers
    , transformers
    , primitive
    , resourcet              >= 1.1.2.1


test-suite test
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  main-is: Test.hs
  ghc-options: -Wall -Wunused-packages
  if flag(lib-Werror)
    ghc-options: -Werror
  hs-source-dirs: test
  build-depends:
      base >= 4 && < 5
    , bytestring
    , conduit >= 1.3.0
    , containers >= 0.3
    , csv-conduit
    , directory
    , vector
    , HUnit >= 1.2
    , test-framework
    , test-framework-hunit
    , text
    , ordered-containers


source-repository head
  type:     git
  location: git://github.com/ozataman/csv-conduit.git
